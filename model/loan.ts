/**
 * Gate API v4
 * Welcome to Gate.io API  APIv4 provides spot, margin and futures trading operations. There are public APIs to retrieve the real-time market statistics, and private APIs which needs authentication to trade on user\'s behalf.
 *
 * Contact: support@mail.gate.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Margin loan details
 */
export class Loan {
    /**
     * Loan ID
     */
    'id'?: string;
    /**
     * Creation time
     */
    'createTime'?: string;
    /**
     * Repay time of the loan. No value will be returned for lending loan
     */
    'expireTime'?: string;
    /**
     * Loan status  open - not fully loaned loaned - all loaned out for lending loan; loaned in for borrowing side finished - loan is finished, either being all repaid or cancelled by the lender auto_repaid - automatically repaid by the system
     */
    'status'?: Loan.Status;
    /**
     * Loan side
     */
    'side': Loan.Side;
    /**
     * Loan currency
     */
    'currency': string;
    /**
     * Loan rate. Only rates in [0.0002, 0.002] are supported.  Not required in lending. Market rate calculated from recent rates will be used if not set
     */
    'rate'?: string;
    /**
     * Loan amount
     */
    'amount': string;
    /**
     * Loan days. Only 10 is supported for now
     */
    'days'?: number;
    /**
     * Whether to auto renew the loan upon expiration
     */
    'autoRenew'?: boolean;
    /**
     * Currency pair. Required if borrowing
     */
    'currencyPair'?: string;
    /**
     * Amount not lent out yet
     */
    'left'?: string;
    /**
     * Repaid amount
     */
    'repaid'?: string;
    /**
     * Repaid interest
     */
    'paidInterest'?: string;
    /**
     * Outstanding interest yet to be paid
     */
    'unpaidInterest'?: string;
    /**
     * Loan fee rate
     */
    'feeRate'?: string;
    /**
     * Original loan ID of the loan if auto-renewed, otherwise equals to id
     */
    'origId'?: string;
    /**
     * User defined custom ID
     */
    'text'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{ name: string; baseName: string; type: string }> = [
        {
            name: 'id',
            baseName: 'id',
            type: 'string',
        },
        {
            name: 'createTime',
            baseName: 'create_time',
            type: 'string',
        },
        {
            name: 'expireTime',
            baseName: 'expire_time',
            type: 'string',
        },
        {
            name: 'status',
            baseName: 'status',
            type: 'Loan.Status',
        },
        {
            name: 'side',
            baseName: 'side',
            type: 'Loan.Side',
        },
        {
            name: 'currency',
            baseName: 'currency',
            type: 'string',
        },
        {
            name: 'rate',
            baseName: 'rate',
            type: 'string',
        },
        {
            name: 'amount',
            baseName: 'amount',
            type: 'string',
        },
        {
            name: 'days',
            baseName: 'days',
            type: 'number',
        },
        {
            name: 'autoRenew',
            baseName: 'auto_renew',
            type: 'boolean',
        },
        {
            name: 'currencyPair',
            baseName: 'currency_pair',
            type: 'string',
        },
        {
            name: 'left',
            baseName: 'left',
            type: 'string',
        },
        {
            name: 'repaid',
            baseName: 'repaid',
            type: 'string',
        },
        {
            name: 'paidInterest',
            baseName: 'paid_interest',
            type: 'string',
        },
        {
            name: 'unpaidInterest',
            baseName: 'unpaid_interest',
            type: 'string',
        },
        {
            name: 'feeRate',
            baseName: 'fee_rate',
            type: 'string',
        },
        {
            name: 'origId',
            baseName: 'orig_id',
            type: 'string',
        },
        {
            name: 'text',
            baseName: 'text',
            type: 'string',
        },
    ];

    static getAttributeTypeMap() {
        return Loan.attributeTypeMap;
    }
}

export namespace Loan {
    export enum Status {
        Open = <any>'open',
        Loaned = <any>'loaned',
        Finished = <any>'finished',
        AutoRepaid = <any>'auto_repaid',
    }
    export enum Side {
        Lend = <any>'lend',
        Borrow = <any>'borrow',
    }
}
