/**
 * Gate API v4
 * Welcome to Gate.io API  APIv4 provides spot, margin and futures trading operations. There are public APIs to retrieve the real-time market statistics, and private APIs which needs authentication to trade on user\'s behalf.
 *
 * Contact: support@mail.gate.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

export class SpotPricePutOrder {
    /**
     * Order type, default to `limit`
     */
    'type'?: string;
    /**
     * Order side  - buy: buy side - sell: sell side
     */
    'side': SpotPricePutOrder.Side;
    /**
     * Order price
     */
    'price': string;
    /**
     * Order amount
     */
    'amount': string;
    /**
     * Trading account type.  Portfolio margin account must set to `cross_margin`  - normal: spot trading - margin: margin trading - cross_margin: cross_margin trading
     */
    'account': SpotPricePutOrder.Account;
    /**
     * time_in_force  - gtc: GoodTillCancelled - ioc: ImmediateOrCancelled, taker only
     */
    'timeInForce'?: SpotPricePutOrder.TimeInForce;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{ name: string; baseName: string; type: string }> = [
        {
            name: 'type',
            baseName: 'type',
            type: 'string',
        },
        {
            name: 'side',
            baseName: 'side',
            type: 'SpotPricePutOrder.Side',
        },
        {
            name: 'price',
            baseName: 'price',
            type: 'string',
        },
        {
            name: 'amount',
            baseName: 'amount',
            type: 'string',
        },
        {
            name: 'account',
            baseName: 'account',
            type: 'SpotPricePutOrder.Account',
        },
        {
            name: 'timeInForce',
            baseName: 'time_in_force',
            type: 'SpotPricePutOrder.TimeInForce',
        },
    ];

    static getAttributeTypeMap() {
        return SpotPricePutOrder.attributeTypeMap;
    }
}

export namespace SpotPricePutOrder {
    export enum Side {
        Buy = <any>'buy',
        Sell = <any>'sell',
    }
    export enum Account {
        Normal = <any>'normal',
        Margin = <any>'margin',
        CrossMargin = <any>'cross_margin',
    }
    export enum TimeInForce {
        Gtc = <any>'gtc',
        Ioc = <any>'ioc',
    }
}
