/**
 * Gate API
 * Welcome to Gate API APIv4 provides operations related to spot, margin, and contract trading, including public interfaces for querying market data and authenticated private interfaces for implementing API-based automated trading.
 *
 * Contact: support@mail.gate.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { MockFuturesOrder } from './mockFuturesOrder';
import { MockFuturesPosition } from './mockFuturesPosition';
import { MockOptionsOrder } from './mockOptionsOrder';
import { MockOptionsPosition } from './mockOptionsPosition';
import { MockSpotBalance } from './mockSpotBalance';
import { MockSpotOrder } from './mockSpotOrder';

/**
 * Portfolio margin calculator input
 */
export class UnifiedPortfolioInput {
    /**
     * Spot
     */
    'spotBalances'?: Array<MockSpotBalance>;
    /**
     * Spot orders
     */
    'spotOrders'?: Array<MockSpotOrder>;
    /**
     * Futures positions
     */
    'futuresPositions'?: Array<MockFuturesPosition>;
    /**
     * Futures order
     */
    'futuresOrders'?: Array<MockFuturesOrder>;
    /**
     * Options positions
     */
    'optionsPositions'?: Array<MockOptionsPosition>;
    /**
     * Option orders
     */
    'optionsOrders'?: Array<MockOptionsOrder>;
    /**
     * Whether to enable spot hedging
     */
    'spotHedge'?: boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{ name: string; baseName: string; type: string }> = [
        {
            name: 'spotBalances',
            baseName: 'spot_balances',
            type: 'Array<MockSpotBalance>',
        },
        {
            name: 'spotOrders',
            baseName: 'spot_orders',
            type: 'Array<MockSpotOrder>',
        },
        {
            name: 'futuresPositions',
            baseName: 'futures_positions',
            type: 'Array<MockFuturesPosition>',
        },
        {
            name: 'futuresOrders',
            baseName: 'futures_orders',
            type: 'Array<MockFuturesOrder>',
        },
        {
            name: 'optionsPositions',
            baseName: 'options_positions',
            type: 'Array<MockOptionsPosition>',
        },
        {
            name: 'optionsOrders',
            baseName: 'options_orders',
            type: 'Array<MockOptionsOrder>',
        },
        {
            name: 'spotHedge',
            baseName: 'spot_hedge',
            type: 'boolean',
        },
    ];

    static getAttributeTypeMap() {
        return UnifiedPortfolioInput.attributeTypeMap;
    }
}
