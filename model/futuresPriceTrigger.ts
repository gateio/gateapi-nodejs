/**
 * Gate API
 * Welcome to Gate API APIv4 provides operations related to spot, margin, and contract trading, including public interfaces for querying market data and authenticated private interfaces for implementing API-based automated trading.
 *
 * Contact: support@mail.gate.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

export class FuturesPriceTrigger {
    /**
     * Trigger Strategy   - 0: Price trigger, triggered when price meets conditions  - 1: Price spread trigger, i.e. the difference between the latest price specified in `price_type` and the second-last price Currently only supports 0 (latest transaction price)
     */
    'strategyType'?: FuturesPriceTrigger.StrategyType;
    /**
     * Reference price type. 0 - Latest trade price, 1 - Mark price, 2 - Index price
     */
    'priceType'?: FuturesPriceTrigger.PriceType;
    /**
     * Price value for price trigger, or spread value for spread trigger
     */
    'price'?: string;
    /**
     * Price Condition Type  - 1: Trigger when the price calculated based on `strategy_type` and `price_type` is greater than or equal to `Trigger.Price`, while Trigger.Price must > last_price - 2: Trigger when the price calculated based on `strategy_type` and `price_type` is less than or equal to `Trigger.Price`, and Trigger.Price must < last_price
     */
    'rule'?: FuturesPriceTrigger.Rule;
    /**
     * Maximum wait time for trigger condition (in seconds). Order will be cancelled if timeout
     */
    'expiration'?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{ name: string; baseName: string; type: string }> = [
        {
            name: 'strategyType',
            baseName: 'strategy_type',
            type: 'FuturesPriceTrigger.StrategyType',
        },
        {
            name: 'priceType',
            baseName: 'price_type',
            type: 'FuturesPriceTrigger.PriceType',
        },
        {
            name: 'price',
            baseName: 'price',
            type: 'string',
        },
        {
            name: 'rule',
            baseName: 'rule',
            type: 'FuturesPriceTrigger.Rule',
        },
        {
            name: 'expiration',
            baseName: 'expiration',
            type: 'number',
        },
    ];

    static getAttributeTypeMap() {
        return FuturesPriceTrigger.attributeTypeMap;
    }
}

export namespace FuturesPriceTrigger {
    export enum StrategyType {
        NUMBER_0 = <any>0,
        NUMBER_1 = <any>1,
    }
    export enum PriceType {
        NUMBER_0 = <any>0,
        NUMBER_1 = <any>1,
        NUMBER_2 = <any>2,
    }
    export enum Rule {
        NUMBER_1 = <any>1,
        NUMBER_2 = <any>2,
    }
}
